// @generated
/// Implement `DataProvider<PersonNamesFormatV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_personnames_personnames_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.67"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.67"]
        impl icu_provider::DataProvider<icu::experimental::personnames::provider::PersonNamesFormatV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::experimental::personnames::provider::PersonNamesFormatV1Marker>, icu_provider::DataError> {
                static UND: <icu::experimental::personnames::provider::PersonNamesFormatV1Marker as icu_provider::DataMarker>::Yokeable = icu::experimental::personnames::provider::PersonNamesFormatV1 { surname_first_locales: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x05\0\0\0\0\0\x02\0\x04\0\x06\0\t\0jakoviyuezh") }, given_first_locales: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0und") }, foreign_space_replacement: Some(alloc::borrow::Cow::Borrowed(" ")), initial_pattern: Some(alloc::borrow::Cow::Borrowed("{0}.")), initial_pattern_sequence: Some(alloc::borrow::Cow::Borrowed("{0} {1}")), person_names_patterns: unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"*\0\0\0\0\0E\0\x8A\0\xCF\0\x14\x01i\x01\xBE\x01\x03\x02H\x02\x8D\x02\xD2\x02'\x03|\x03\xC1\x03\x06\x04K\x04\x90\x04\xE5\x04:\x05\x7F\x05\xC4\x05\t\x06N\x06\xA3\x06\xF8\x06=\x07\x82\x07\xC7\x07\x0C\x08a\x08\xB6\x08\xFB\x08@\t\x85\t\xCA\t\x1F\nt\n\xBA\n\0\x0BF\x0B\x8C\x0B\xD2\x0B\xA1\x02\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}\xA1\x04\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}a\x02\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}a\x04\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}!\x03\0\0\x01\0\0\0\0\0{given-monogram-allCaps}{given2-monogram-allCaps}{surname-monogram-allCaps}!\x05\0\0\x01\0\0\0\0\0{given-monogram-allCaps}{given2-monogram-allCaps}{surname-monogram-allCaps}\x91\x02\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}\x91\x04\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}Q\x02\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}Q\x04\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}\x11\x03\0\0\x01\0\0\0\0\0{given-monogram-allCaps}{given2-monogram-allCaps}{surname-monogram-allCaps}\x11\x05\0\0\x01\0\0\0\0\0{given-monogram-allCaps}{given2-monogram-allCaps}{surname-monogram-allCaps}\x89\x02\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}\x89\x04\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}I\x02\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}I\x04\0\0\x01\0\0\0\0\0{title} {given} {given2} {surname} {surname2} {credentials}\t\x03\0\0\x01\0\0\0\0\0{given-monogram-allCaps}{given2-monogram-allCaps}{surname-monogram-allCaps}\t\x05\0\0\x01\0\0\0\0\0{given-monogram-allCaps}{given2-monogram-allCaps}{surname-monogram-allCaps}\xA2\x02\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}\xA2\x04\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}b\x02\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}b\x04\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}\"\x03\0\0\x01\0\0\0\0\0{surname-monogram-allCaps}{given-monogram-allCaps}{given2-monogram-allCaps}\"\x05\0\0\x01\0\0\0\0\0{surname-monogram-allCaps}{given-monogram-allCaps}{given2-monogram-allCaps}\x92\x02\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}\x92\x04\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}R\x02\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}R\x04\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}\x12\x03\0\0\x01\0\0\0\0\0{surname-monogram-allCaps}{given-monogram-allCaps}{given2-monogram-allCaps}\x12\x05\0\0\x01\0\0\0\0\0{surname-monogram-allCaps}{given-monogram-allCaps}{given2-monogram-allCaps}\x8A\x02\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}\x8A\x04\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}J\x02\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}J\x04\0\0\x01\0\0\0\0\0{surname} {surname2} {title} {given} {given2} {credentials}\n\x03\0\0\x01\0\0\0\0\0{surname-monogram-allCaps}{given-monogram-allCaps}{given2-monogram-allCaps}\n\x05\0\0\x01\0\0\0\0\0{surname-monogram-allCaps}{given-monogram-allCaps}{given2-monogram-allCaps}\xA4\x02\0\0\x01\0\0\0\0\0{surname} {surname2}, {title} {given} {given2} {credentials}\xA4\x04\0\0\x01\0\0\0\0\0{surname} {surname2}, {title} {given} {given2} {credentials}\x94\x02\0\0\x01\0\0\0\0\0{surname} {surname2}, {title} {given} {given2} {credentials}\x94\x04\0\0\x01\0\0\0\0\0{surname} {surname2}, {title} {given} {given2} {credentials}\x8C\x02\0\0\x01\0\0\0\0\0{surname} {surname2}, {title} {given} {given2} {credentials}\x8C\x04\0\0\x01\0\0\0\0\0{surname} {surname2}, {title} {given} {given2} {credentials}") } };
                static VALUES: [&<icu::experimental::personnames::provider::PersonNamesFormatV1Marker as icu_provider::DataMarker>::Yokeable; 1usize] = [&UND];
                static KEYS: [&str; 1usize] = ["und"];
                if let Ok(payload) = KEYS.binary_search_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse()).map(|i| *unsafe { VALUES.get_unchecked(i) }) {
                    Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(payload)), metadata: Default::default() })
                } else {
                    Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::experimental::personnames::provider::PersonNamesFormatV1Marker as icu_provider::KeyedDataMarker>::KEY, req))
                }
            }
        }
    };
}
